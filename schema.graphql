type AllowedSeaDropUpdated @entity(immutable: true) {
  id: Bytes!
  allowedSeaDrop: [Bytes!]! # address[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BatchMetadataUpdate @entity(immutable: true) {
  id: Bytes!
  _fromTokenId: BigInt! # uint256
  _toTokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ConsecutiveTransfer @entity(immutable: true) {
  id: Bytes!
  fromTokenId: BigInt! # uint256
  toTokenId: BigInt! # uint256
  from: Bytes! # address
  to: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractURIUpdated @entity(immutable: true) {
  id: Bytes!
  newContractURI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MaxSupplyUpdated @entity(immutable: true) {
  id: Bytes!
  newMaxSupply: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PotentialOwnerUpdated @entity(immutable: true) {
  id: Bytes!
  newPotentialAdministrator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProvenanceHashUpdated @entity(immutable: true) {
  id: Bytes!
  previousHash: Bytes! # bytes32
  newHash: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoyaltyInfoUpdated @entity(immutable: true) {
  id: Bytes!
  receiver: Bytes! # address
  bps: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SeaDropTokenDeployed @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferValidatorUpdated @entity(immutable: true) {
  id: Bytes!
  oldValidator: Bytes! # address
  newValidator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
